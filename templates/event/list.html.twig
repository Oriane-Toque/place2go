{% extends "layout/base.html.twig" %}

{% block title 'Sorties' %}

{% block body %}

	<style>
		#map {
			width: 100%;
			min-height: 400px;
			position: sticky;
			top: 5rem;
			max-height: 800px;
			margin-bottom: 0.8rem;
		}

		.marker {
			background-image: url('img/pinmap.png');
			background-size: cover;
			width: 50px;
			height: 50px;
			border-radius: 50%;
			cursor: pointer;
		}
		.mapboxgl-popup {
			max-width: 150px;
		}
		.mapboxgl-popup-content {
			text-align: center;
			font-family: 'Open Sans', sans-serif;
		}
	</style>

	<div class="container my-5">

		<section id="search">

			<div class="row">
				<div class="col-12">
					{% include 'event/_filter.html.twig' %}
				</div>
			</div>

		</section>

		<section id="list" class="mt-5">

			<div class="row">
				<div class="col-8">

					{% for event in events %}
						<div class="list__card shadow-3 js-event" data-lat="{{event.lat}}" data-lon="{{ event.lon }}">
							<div class="list__card_image">
								<a href="{{ path('app_profile_show', {id: event.author.id}) }}">
									<img src="{{ event.author.avatar }}" alt="{{ event.author.nickname }}" class=""/>
								</a>
							</div>

							<div class="list__card_content">
								<div class="flex-between">
									<div class="list__cards_author">
										<a href="{{ path('app_profile_show', {id: event.author.id}) }}">
											{{ event.author.nickname }}
										</a>
									</div>
									<div class="list__card_date">
										<small class="text-muted fst-italic">
											le
											{{ event.eventDate | format_date('none', 'd MMMM Y à h:m', null, 'gregorian', 'fr')}}
											<i class="fas fa-caret-left"></i>
										</small>
									</div>
								</div>

								<div class="flex-between">
									<div class="list__card_title">
										<i class="fas fa-long-arrow-alt-right"></i>
										<a href="{{ path('app_event_show', {id: event.id}) }}">{{ event.title }}</a>
									</div>
									<div class="list__cards_attendants">
										{{ event.attendants | length }} / {{ event.maxAttendants }}
										<i class="fas fa-users"></i>
									</div>
								</div>

								<div class="flex-between">
									<div class="list__card_address">
										<i class="fas fa-long-arrow-alt-right"></i>
										{{ event.address }}
									</div>
								</div>

								<div class="flex-between">
									<p class="list__card_categories m-0">
										{% for category in event.categories %}
											{{ category.name }}{{ loop.last ? '' : ' - ' }}
										{% endfor %}
									</p>

									<div class="list__cards_join">
										<a href="{{ path("app_event_leave", {id: event.id}) }}" class="text-danger">
											<i class="fas fa-user-minus"></i>
										</a>
										<a href="{{ path("app_event_join", {id: event.id}) }}" class="text-info ms-2">
											<i class="fas fa-user-plus"></i>
										</a>
									</div>
								</div>

							</div>
						</div>
					{% else %}
						<div>
							Aucun résultat trouvé.
						</div>
					{% endfor %}
				</div>

				<div class="col-4 mb-2">
					<div id='map' class=""></div>
				</div>

			</section>
		</div>

	<script>

		mapboxgl.accessToken = 'pk.eyJ1Ijoia2V5Z2VuOSIsImEiOiJja3NrNWh6MGQwczZnMnBsNHhqYnRtMDUxIn0.dq2MMs1vSwGk8nMIj9NTxQ';
			var geojson = {{ geojson|json_encode|raw }};

			let map = new mapboxgl.Map({
			container: 'map', // Container ID
			style: 'mapbox://styles/mapbox/streets-v11', // Map style to use
			center: [
			{{ location[0] }}, {{ location[1] }}
			], // Starting position [lng, lat]
			zoom: 10, // Starting zoom level
			});

			let clickableElements = document.querySelectorAll('.js-event');
				clickableElements.forEach(element => {
				element.addEventListener('click', evt => {
				map.flyTo({
				center: [
				element.dataset.lat, element.dataset.lon
				],
				essential: true,
				zoom: 14
				});
				})
			})

		// add markers to map
		geojson.features.forEach(function (marker) { // create a HTML element for each feature
			var el = document.createElement('div');
			el.className = 'marker';

			// make a marker for each feature and add it to the map
			new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).setPopup(new mapboxgl.Popup({offset: 25})) // add popups.setHTML('<h5>' + marker.properties.title + '</h5><p>' + marker.properties.description + '</p>')).addTo(map);
		});

	</script>

{% endblock %}
